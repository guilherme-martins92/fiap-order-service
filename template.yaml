AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for fiap-order-service

Globals:
  Function:
    Timeout: 100

    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  FiapOrderServiceApi:
    Type: AWS::Serverless::Function
    Properties:
      Description: Lambda function em .NET 8 para gerenciamento de pedidos, integrando uma API Web com DynamoDB e enviando mensagens para a fila PaymentProcessingQueue.
      CodeUri: ./src/fiap-order-service/
      Handler: fiap-order-service
      Runtime: dotnet8
      MemorySize: 1024
      Environment:
        Variables:
          ORDERS_TABLE: !Ref OrdersTable
          CatalogApiUrl: "https://wzmfjcfc90.execute-api.us-east-1.amazonaws.com"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: "2.0"
            Path: /{proxy+}
            Method: ANY
        RootResource:
          PayloadFormatVersion: "2.0"
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY

  PaymentCreatorFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./src/fiap-order-payment-consumer/
      Handler: fiap-order-payment-consumer::fiap_order_payment_consumer.Function::FunctionHandler
      Runtime: dotnet8
      Policies:
        - AWSLambdaBasicExecutionRole
        - SQSPollerPolicy:
            QueueName: Queue-Pedidos-PagamentoCriado
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: arn:aws:sqs:us-east-1:891377307312:Queue-Pedidos-PagamentoCriado
            BatchSize: 5

  # DynamoDB table to store item: {id: &lt;ID&gt;, name: &lt;NAME&gt;}
  OrdersTable:
    Type: AWS::Serverless::SimpleTable
    Description: Tabela DynamoDB para armazenamento de pedidos.
    Properties:
      TableName: Orders
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  PaymentProcessingLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: PaymentProcessingLetterQueue

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: "true"
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
